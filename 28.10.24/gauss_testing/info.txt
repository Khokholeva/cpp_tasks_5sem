Ради интереса посмотрела как долго работают разные алгоритмы на разных размерах
Source.cpp - генерирует gauss_times.txt
Первая строка - колво измерений, последующие - размер системы, время работы 4 алгоритмов
Возможное колво измерений ограничено размером results, но больше 1000 измерений на интересном наборе размеров все равно будет работать очень долго

При изменении a_max, начального s_double и изменения s_double в цикле генерируются разные наборы (названия изменены вручную)
gauss_times_a.txt -  10 - 2000 с увеличением в 1.05 раз между замерами
gauss_times_b.txt -  10 - 500 с шагом 1
gauss_times_d.txt -  1150 - 1250 с шагом 2

gauss_parallels.py - строит график и сохраняет его в gauss_x.png (исходные данные и 'x' изменяются вручную)

gauss_a/b.png -общие тренды
gauss_c.png - маленькие размеры, видно где параллельность начинает давать выгоду
gauss_d.png - for и низкоуровневый работают примерно одинаково, for в среднем чуть хуже, но в некоторых местах хаос
